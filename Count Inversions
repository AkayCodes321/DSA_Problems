#include <bits/stdc++.h> 
int Merge(long long *arr,int s,int e){
    int mid=s+(e-s)/2;
    int inv=0,k=0,i=s,j=mid+1,pivot=mid+1;;
    long long temp[e-s+1]={0};
    
    while(i<=mid && j<=e)
    {
        if(arr[i]>arr[j])
        {
            inv+=pivot-i;
            temp[k++]=arr[j++];
        }
        else temp[k++]=arr[i++];
    }
    while(i<=mid)temp[k++]=arr[i++];
    while(j<=e)temp[k++]=arr[j++];
    k=0;
    for(int i=s;i<=e;i++)
        arr[i]=temp[k++];
    
    return inv;
}

int MergeSort(long long *arr,int s,int e)
{
    int inv=0;
    if(s>=e)return 0;
    int mid=s+(e-s)/2;
    
    inv+=MergeSort(arr,s,mid);
    inv+=MergeSort(arr,mid+1,e);
    inv+=Merge(arr,s,e);
    
    return inv;
}
long long getInversions(long long *arr, int n){
    int inv=0;
    inv=MergeSort(arr,0,n-1);
    return inv;
}
